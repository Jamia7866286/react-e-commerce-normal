[{"/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/index.js":"1","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/App.js":"2","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/reportWebVitals.js":"3","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/header.js":"4","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Routing/routing.js":"5","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/assets/atoms/main.recoil.js":"6","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/My-Cart/my-cart.js":"7","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Add-Product/add-product.js":"8","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Product-List/product-list.js":"9","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Product-List/Product-Details/product-details.js":"10","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/My-Cart/my-cart-card.js":"11","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Product-List/product-card.js":"12","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/BackButton/GoBack.js":"13","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/const/courency-convertor.js":"14","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/My-Address/my-address.js":"15","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Amount-Details-Card/amount-details-card.js":"16","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/API/phone-verification.js":"17","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/firebase-config.js":"18"},{"size":707,"mtime":1661258306152,"results":"19","hashOfConfig":"20"},{"size":251,"mtime":1661427669446,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1661258306153,"results":"22","hashOfConfig":"20"},{"size":623,"mtime":1661258306152,"results":"23","hashOfConfig":"20"},{"size":822,"mtime":1661411835978,"results":"24","hashOfConfig":"20"},{"size":1987,"mtime":1661420646528,"results":"25","hashOfConfig":"20"},{"size":2394,"mtime":1661418614288,"results":"26","hashOfConfig":"20"},{"size":6035,"mtime":1661339300710,"results":"27","hashOfConfig":"20"},{"size":3567,"mtime":1661493685782,"results":"28","hashOfConfig":"20"},{"size":1610,"mtime":1661258306151,"results":"29","hashOfConfig":"20"},{"size":3834,"mtime":1661258306151,"results":"30","hashOfConfig":"20"},{"size":1612,"mtime":1661258306151,"results":"31","hashOfConfig":"20"},{"size":361,"mtime":1661258306151,"results":"32","hashOfConfig":"20"},{"size":210,"mtime":1661258306152,"results":"33","hashOfConfig":"20"},{"size":1339,"mtime":1661419561281,"results":"34","hashOfConfig":"20"},{"size":902,"mtime":1661418571910,"results":"35","hashOfConfig":"20"},{"size":438,"mtime":1661420610777,"results":"36","hashOfConfig":"20"},{"size":690,"mtime":1661433217612,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"7xetmr",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"41"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"41"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/index.js",[],[],[],"/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/App.js",[],[],"/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/reportWebVitals.js",[],[],"/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/header.js",[],[],"/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Routing/routing.js",[],[],"/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/assets/atoms/main.recoil.js",["103"],[],"import { atom, selector } from \"recoil\";\nimport data from \"../data/product_data.json\";\n\n// Add product into cart\nexport const AddToCart = atom({\n  key: \"add_to_cart\",\n  default: [],\n});\n\n// Add Product\nexport const AddProductItems = atom({\n  key: \"add_product\",\n  default: data.products,\n});\n\n// search filter product\nexport const SearchProduct = atom({\n  key: \"search_product\",\n  default: \"\",\n});\n\n// select filter product\nexport const SelectFilterProduct = atom({\n  key: \"select_product\",\n  default: \"All\",\n});\n\n// Price sorting product\nexport const SortPrice = atom({\n  key: \"sort_price\",\n  default: \"Price\",\n});\n\n// filter search product data\nexport const FilterSearchProduct = selector({\n  key: \"filter_search_product\",\n  get: ({ get }) => {\n    const productList = get(AddProductItems);\n    const searchText = get(SearchProduct);\n    const selectedItem = get(SelectFilterProduct);\n    const sortPrice = get(SortPrice);\n\n    let filterdata = [];\n\n    if (searchText.length || selectedItem.length || sortPrice.length) {\n      filterdata = productList\n        .filter((item) =>\n          item.name.toLowerCase().includes(searchText.toLowerCase())\n        )\n        .filter((selectItemData) => {\n          if (selectedItem === \"All\") {\n            return AddProductItems;\n          } else {\n            return selectItemData.type === selectedItem;\n          }\n        })\n        .sort((a, b) => {\n          if (sortPrice === \"low_price\") {\n            return a.price - b.price;\n          } else if (sortPrice === \"high_price\") {\n            return b.price - a.price;\n          }\n        });\n\n      return filterdata;\n    } else {\n      return AddProductItems;\n    }\n  },\n});\n\n// Total Cart item price\nexport const TotalPrice = atom({\n  key: \"total_price\",\n  default: 0,\n});\n\n// Address\nexport const AddressData = atom({\n  key: \"address_data\",\n  default: {\n    address:\n      \"Batla House,Near Royal Biryani Jamia Nagar Okhla New Delhi pin-110025\",\n    phone: \"+919654775378\",\n  },\n});\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/My-Cart/my-cart.js",["104","105","106"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { AddToCart, TotalPrice } from \"../../assets/atoms/main.recoil\";\nimport { CourencyConvertor } from \"../../const/courency-convertor\";\nimport HeaderComponent from \"../../header\";\nimport AmountDetailsCard from \"../Amount-Details-Card/amount-details-card\";\nimport MyAddress from \"../My-Address/my-address\";\nimport MyCartCard from \"./my-cart-card\";\n\nconst MyCart = () => {\n  const [cartItem, setCartItems] = useRecoilState(AddToCart);\n  const [cartTotalPrice, setCartTotalPrice] = useRecoilState(TotalPrice);\n\n  const [addressComponent, setAddressComponent] = useState(false);\n\n  useEffect(() => {\n    let price = 0;\n    cartItem.forEach((element) => {\n      price = price + element.price * element.product_cart_count;\n    });\n    setCartTotalPrice(price);\n  }, [cartItem]);\n\n  return (\n    <>\n      <HeaderComponent />\n      <div className=\"cart-main-box\">\n        {!addressComponent ? (\n          <div className=\"product-list-main cart-list-main\">\n            {cartItem?.length !== 0 ? (\n              cartItem.map((item) => <MyCartCard key={item.id} item={item} />)\n            ) : (\n              <div className=\"cart-no-data\">\n                <p>No data Found!</p>\n                <div className=\"continue-shop\">\n                  <Link to=\"/\">Continue Shopping</Link>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          <MyAddress />\n        )}\n\n        {cartItem?.length !== 0 && (\n          <div className=\"buy-main\">\n            <div className=\"item-box\">\n              <h6>Total Amount : </h6>\n              <h5>{CourencyConvertor(cartTotalPrice)}</h5>\n            </div>\n            <div className=\"item-box\" style={{ border: 0 }}>\n              <h6>Shipping :</h6>\n              <h5 style={{ color: \"green\" }}>Free</h5>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-primary btn-md w-100\"\n              onClick={() => {\n                setAddressComponent(true);\n              }}\n            >\n              Cash On Delievery\n            </button>\n            <div className=\"continue-shop\">\n              <Link to=\"/\">Continue Shopping</Link>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MyCart;\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Add-Product/add-product.js",["107","108"],[],"import { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport * as yup from \"yup\";\nimport { AddProductItems } from \"../../assets/atoms/main.recoil\";\nimport GoBack from \"../../BackButton/GoBack\";\n\nconst AddProduct = () => {\n  const [addProductAtom, setAddProductAtom] = useRecoilState(AddProductItems);\n  let navigate = useNavigate();\n\n  let ValidationSchema = yup.object().shape({\n    name: yup.string().required(\"Please fill this field!\"),\n    price: yup.string().required(\"Please fill this field!\"),\n    description: yup.string().required(\"Please fill this field!\"),\n    img: yup.string().url().required(\"Please fill this field!\"),\n    quantity: yup.string().required(\"Please fill this field!\"),\n    type: yup.string().required(\"Please fill this field!\"),\n  });\n\n  const initialValue = {\n    name: \"\",\n    price: \"\",\n    quantity: \"\",\n    description: \"\",\n    img: \"\",\n    id: Math.floor(Math.random() * 10000),\n    product_cart_count: 1,\n    type: \"\",\n  };\n\n  const { handleChange, handleSubmit, values, errors, touched } = useFormik({\n    initialValues: initialValue,\n    validationSchema: ValidationSchema,\n    onSubmit: (values) => {\n      alert(\"Your product added successfully!\");\n      setAddProductAtom((prev) => {\n        return [values, ...prev];\n      });\n      navigate(\"/\");\n    },\n  });\n\n  return (\n    <>\n      <GoBack url={\"/\"} />\n\n      <h1 className=\"my-5 text-center\">Add Product</h1>\n      <div className=\"w-50 mx-auto mt-5\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n              Product Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter product name\"\n              id=\"exampleInputEmail1\"\n              name=\"name\"\n              onChange={handleChange}\n              value={values.name}\n            />\n\n            {touched.price && errors.name && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {errors.name}\n              </div>\n            )}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n              Price\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              placeholder=\"Enter price\"\n              name=\"price\"\n              value={values.price}\n              onChange={handleChange}\n            />\n            {touched.price && errors.price && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {errors.price}\n              </div>\n            )}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"quantity\" className=\"form-label\">\n              Quantity\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"quantity\"\n              placeholder=\"Enter quantity\"\n              name=\"quantity\"\n              value={values.quantity}\n              onChange={handleChange}\n            />\n            {touched.quantity && errors.quantity && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {errors.quantity}\n              </div>\n            )}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputPassword3\" className=\"form-label\">\n              Description\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleInputPassword3\"\n              placeholder=\"Enter description\"\n              name=\"description\"\n              value={values.description}\n              onChange={handleChange}\n            />\n            {touched.price && errors.description && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {errors.description}\n              </div>\n            )}\n          </div>\n\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Product Type</label>\n            <select\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n              onChange={handleChange}\n              name=\"type\"\n              value={values.type}\n            >\n              <option defaultValue>Select product type</option>\n              <option value=\"kindle\">Kindle</option>\n              <option value=\"hardcover\">Hardcover</option>\n              <option value=\"paperback\">Paperback</option>\n            </select>\n\n            {touched.type && errors.type && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {errors.type}\n              </div>\n            )}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputPassword4\" className=\"form-label\">\n              Image Url\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleInputPassword4\"\n              placeholder=\"Enter image url\"\n              name=\"img\"\n              value={values.img}\n              onChange={handleChange}\n            />\n            {touched.price && errors.img && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {errors.img}\n              </div>\n            )}\n          </div>\n\n          {/* <div className=\"mb-3 form-check\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"exampleCheck1\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n              Check me out\n            </label>\n          </div> */}\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default AddProduct;\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Product-List/product-list.js",["109","110","111","112","113","114","115"],[],"import React, { useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport {\n  AddProductItems,\n  FilterSearchProduct,\n  SearchProduct,\n  SelectFilterProduct,\n  SortPrice,\n} from \"../../assets/atoms/main.recoil\";\nimport { ecommerce } from \"../../firebase-config\";\nimport HeaderComponent from \"../../header\";\nimport ProductCard from \"./product-card\";\nimport data from \"../../assets/data/product_data.json\";\n\nimport { set, ref } from \"firebase/database\";\n\nconst ProductList = () => {\n  // Recoil state\n  const [addProductAtom, setFilterData] = useRecoilState(FilterSearchProduct);\n  const [searchText, setSearchText] = useRecoilState(SearchProduct);\n  const [selectItem, setSelectItem] = useRecoilState(SelectFilterProduct);\n  const [sortPriceData, setSortPriceData] = useRecoilState(SortPrice);\n\n  // state variable\n  const [clearBtnDisabled, setClearBtnDisabled] = useState(null);\n\n  // ClearAllFilter search, select and price (sorting)\n  const ClearAllFilter = () => {\n    if (\n      searchText.length ||\n      selectItem !== \"All\" ||\n      sortPriceData !== \"Price\"\n    ) {\n      setSearchText(\"\");\n      setSelectItem(\"All\");\n      setSortPriceData(\"Price\");\n      setClearBtnDisabled(true);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      searchText !== \"\" ||\n      selectItem !== \"All\" ||\n      sortPriceData !== \"Price\"\n    ) {\n      setClearBtnDisabled(false);\n    } else {\n      setClearBtnDisabled(true);\n    }\n  }, [searchText, selectItem, sortPriceData]);\n\n  useEffect(() => {\n    // ecommerce.push(data.products);\n    // console.log(\"data get\", \"database\", ecommerce);\n    // ecommerce.push(\n    //   set(ref(ecommerce, \"/user\"), {\n    //     data: \"Naseem\",\n    //     name: \"ahmad\",\n    //   })\n    // );\n  }, []);\n\n  return (\n    <>\n      <HeaderComponent />\n\n      <div className=\"search-box my-5\">\n        <h1>Product List</h1>\n\n        <div className=\"serach-input\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Search product\"\n            value={searchText}\n            onChange={(e) => setSearchText(e.target.value)}\n          />\n        </div>\n\n        <select\n          className=\"form-select\"\n          aria-label=\"Default select example\"\n          value={selectItem}\n          onChange={(e) => setSelectItem(e.target.value)}\n        >\n          <option value=\"All\">All Product</option>\n          <option value=\"kindle\">Kindle</option>\n          <option value=\"hardcover\">Hardcover</option>\n          <option value=\"paperback\">Paperback</option>\n        </select>\n\n        <select\n          className=\"form-select\"\n          aria-label=\"Default select example\"\n          value={sortPriceData}\n          onChange={(e) => setSortPriceData(e.target.value)}\n        >\n          <option defaultValue>Price</option>\n          <option value=\"low_price\">Low to High</option>\n          <option value=\"high_price\">High to Low</option>\n        </select>\n\n        <button\n          className=\"clear-filter btn btn-danger\"\n          onClick={ClearAllFilter}\n          disabled={clearBtnDisabled}\n        >\n          Clear All\n        </button>\n      </div>\n\n      {addProductAtom.length > 0 ? (\n        <div className=\"product-list-main\">\n          {addProductAtom.map((productitem) => {\n            return (\n              <ProductCard productitem={productitem} key={productitem.id} />\n            );\n          })}\n        </div>\n      ) : (\n        <h5 className=\"text-center my-5\">No product find!</h5>\n      )}\n    </>\n  );\n};\n\nexport default ProductList;\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Product-List/Product-Details/product-details.js",["116"],[],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { AddProductItems } from \"../../../assets/atoms/main.recoil\";\nimport GoBack from \"../../../BackButton/GoBack\";\nimport { CourencyConvertor } from \"../../../const/courency-convertor\";\n\nconst ProductDetails = () => {\n  const productDetails = useRecoilValue(AddProductItems);\n\n  const { id } = useParams();\n\n  const [productDetailsData, setProductDetailsData] = useState({});\n\n  useEffect(() => {\n    const getMatchProduct = productDetails.filter((items) => {\n      return items.id === +id;\n    });\n    setProductDetailsData(...getMatchProduct);\n  }, []);\n\n  return (\n    <>\n      <GoBack url={\"/\"} />\n      <h1 className=\"my-5\">Product Details</h1>\n      <div className=\"w-100 mx-auto mt-5\">\n        <div className=\"d-flex\">\n          <div className=\"flex-shrink-0\">\n            <img\n              src={productDetailsData.img}\n              alt={productDetailsData.name}\n              className=\"img-fluid\"\n              style={{ width: \"400px\" }}\n            />\n          </div>\n          <div className=\"flex-grow-1 ms-3\">\n            <h2>\n              {productDetailsData.name}{\" \"}\n              <span className=\"chip\">\n                <span className=\"chip\">\n                  {CourencyConvertor(productDetailsData.price)}\n                </span>\n              </span>\n            </h2>\n            <p style={{ fontSize: \"20px\" }}>{productDetailsData.description}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProductDetails;\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/My-Cart/my-cart-card.js",["117"],[],"import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { AddToCart } from \"../../assets/atoms/main.recoil\";\nimport { CourencyConvertor } from \"../../const/courency-convertor\";\n\nconst MyCartCard = ({ item }) => {\n  const [cartItem, setCartItems] = useRecoilState(AddToCart);\n\n  const CharacterSet = (description, chrCount) => {\n    if (description.length > chrCount)\n      return `${description.slice(0, chrCount)} ...`;\n    else {\n      return description;\n    }\n  };\n\n  const itemCountIncrease = (id) => {\n    setCartItems((prev) => {\n      const filtered = prev.filter((obj) => obj.id === id);\n      const nonfiltered = prev.filter((obj) => obj.id !== id);\n\n      console.log(\"filtered\", filtered, \"non-filter : \", nonfiltered);\n\n      let final = {\n        ...filtered[0],\n        product_cart_count: filtered[0].product_cart_count + 1,\n      };\n      return [final, ...nonfiltered];\n    });\n  };\n\n  const itemCountDecrement = (id) => {\n    setCartItems((prev) => {\n      const filter = prev.filter((item) => item.id === id);\n      const nonfilter = prev.filter((item) => item.id !== id);\n\n      const final = {\n        ...filter[0],\n        product_cart_count: filter[0].product_cart_count - 1,\n      };\n\n      return [final, ...nonfilter];\n    });\n  };\n\n  // Delete cart item\n  const DeleteCartItem = (id) => {\n    let deletedItemGet = cartItem.filter((item) => item.id !== id);\n    setCartItems(deletedItemGet);\n  };\n\n  return (\n    <>\n      <div className=\"d-flex card-box\" id={item.id}>\n        <div className=\"flex-shrink-0\">\n          <img src={item.img} />\n        </div>\n        <div className=\"flex-grow-1 ms-3\">\n          <div>\n            <strong>\n              {CharacterSet(item.name, 25)}\n              <span className=\"chip\">\n                {CourencyConvertor(item.price * item.product_cart_count)}\n              </span>\n            </strong>\n          </div>\n          <div style={{ fontSize: \"12px\", margin: \"8px 0\" }}>\n            {CharacterSet(item.description, 60)}\n          </div>\n\n          <div className=\"quantity-box\">\n            <div className=\"item-count\">\n              <button\n                className=\"decriment-box\"\n                onClick={() => {\n                  itemCountDecrement(item.id);\n                }}\n                disabled={+item.product_cart_count === 1}\n              >\n                -\n              </button>\n              <span>{item.product_cart_count}</span>\n              <button\n                className=\"decriment-box\"\n                onClick={() => {\n                  itemCountIncrease(item.id);\n                }}\n                disabled={+item.quantity === +item.product_cart_count}\n              >\n                +\n              </button>\n            </div>\n\n            <div\n              className=\"delete-cartitem\"\n              onClick={() => {\n                DeleteCartItem(item.id);\n              }}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                fill=\"#dc3545\"\n                className=\"bi bi-trash3-fill\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z\" />\n              </svg>\n            </div>\n            <div className=\"quantity-item\">Stock : {+item.quantity}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MyCartCard;\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Product-List/product-card.js",["118"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { AddToCart } from \"../../assets/atoms/main.recoil\";\nimport { CourencyConvertor } from \"../../const/courency-convertor\";\n\nconst ProductCard = ({ productitem }) => {\n  const { img, name, description, price, id } = productitem;\n\n  const [cartItems, setCartItem] = useRecoilState(AddToCart);\n\n  const CharacterSet = (description, chrCount) => {\n    if (description?.length > chrCount) {\n      return `${description.slice(0, chrCount)} ...`;\n    } else {\n      return description;\n    }\n  };\n\n  return (\n    <div className=\"d-flex card-box\">\n      <div className=\"flex-shrink-0\">\n        <img src={img} alt=\"image\" />\n      </div>\n      <div className=\"flex-grow-1 ms-3\">\n        <div>\n          <strong>\n            {CharacterSet(name, 25)}\n            <span className=\"chip\">{CourencyConvertor(price)}</span>\n          </strong>\n        </div>\n        <div style={{ fontSize: \"12px\", margin: \"8px 0\" }}>\n          <Link to={`product/${id}`} style={{ color: \"inherit\" }}>\n            {CharacterSet(description, 60)}\n          </Link>\n        </div>\n        <div style={{ textAlign: \"right\" }}>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-sm\"\n            onClick={() => {\n              setCartItem((prev) => [productitem, ...prev]);\n            }}\n            disabled={cartItems.filter((obj) => obj.id === id).length > 0}\n          >\n            Add to Cart\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/BackButton/GoBack.js",["119"],[],"import { Button } from \"bootstrap\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const GoBack = ({ url }) => {\n  let navigate = useNavigate();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-primary\"\n      onClick={() => navigate(url)}\n    >\n      go back\n    </button>\n  );\n};\n\nexport default GoBack;\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/const/courency-convertor.js",[],[],"/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/My-Address/my-address.js",["120","121","122","123"],[],"import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { validatePhoneNumberViaAPI } from \"../../API/phone-verification\";\nimport { AddressData, TotalPrice } from \"../../assets/atoms/main.recoil\";\nimport AmountDetailsCard from \"../Amount-Details-Card/amount-details-card\";\n\nconst MyAddress = () => {\n  const [addressText, setAddressText] = useRecoilState(AddressData);\n\n  return (\n    <>\n      <form>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Address\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={addressText.address}\n            readOnly\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Phone\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={addressText.phone}\n            readOnly\n          />\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-md w-100\"\n          onClick={() => {\n            validatePhoneNumberViaAPI(addressText.phone);\n          }}\n        >\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default MyAddress;\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/Components/Amount-Details-Card/amount-details-card.js",["124"],[],"import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { CourencyConvertor } from \"../../const/courency-convertor\";\n\nconst AmountDetailsCard = ({ cartTotalPrice, setAddressComponent }) => {\n  return (\n    <div className=\"buy-main\">\n      <div className=\"item-box\">\n        <h6>Total Amount : </h6>\n        <h5>{CourencyConvertor(cartTotalPrice)}</h5>\n      </div>\n      <div className=\"item-box\" style={{ border: 0 }}>\n        <h6>Shipping :</h6>\n        <h5 style={{ color: \"green\" }}>Free</h5>\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-primary btn-md w-100\"\n        onClick={() => {\n          setAddressComponent(true);\n        }}\n      >\n        Cash On Delievery\n      </button>\n      <div className=\"continue-shop\">\n        <Link to=\"/\">Continue Shopping</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default AmountDetailsCard;\n","/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/API/phone-verification.js",[],[],"/Users/naseem/Desktop/React-apps/E-commerce-Without_localstorage/src/firebase-config.js",[],[],{"ruleId":"125","severity":1,"message":"126","line":57,"column":22,"nodeType":"127","messageId":"128","endLine":57,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":25},{"ruleId":"129","severity":1,"message":"133","line":12,"column":20,"nodeType":"131","messageId":"132","endLine":12,"endColumn":32},{"ruleId":"134","severity":1,"message":"135","line":23,"column":6,"nodeType":"136","endLine":23,"endColumn":16,"suggestions":"137"},{"ruleId":"129","severity":1,"message":"138","line":2,"column":17,"nodeType":"131","messageId":"132","endLine":2,"endColumn":25},{"ruleId":"129","severity":1,"message":"139","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":24},{"ruleId":"129","severity":1,"message":"140","line":2,"column":26,"nodeType":"131","messageId":"132","endLine":2,"endColumn":40},{"ruleId":"129","severity":1,"message":"141","line":4,"column":3,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"142","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":19},{"ruleId":"129","severity":1,"message":"143","line":13,"column":8,"nodeType":"131","messageId":"132","endLine":13,"endColumn":12},{"ruleId":"129","severity":1,"message":"144","line":15,"column":10,"nodeType":"131","messageId":"132","endLine":15,"endColumn":13},{"ruleId":"129","severity":1,"message":"145","line":15,"column":15,"nodeType":"131","messageId":"132","endLine":15,"endColumn":18},{"ruleId":"129","severity":1,"message":"146","line":19,"column":26,"nodeType":"131","messageId":"132","endLine":19,"endColumn":39},{"ruleId":"134","severity":1,"message":"147","line":20,"column":6,"nodeType":"136","endLine":20,"endColumn":8,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":56,"column":11,"nodeType":"151","endLine":56,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":23,"column":9,"nodeType":"151","endLine":23,"endColumn":38},{"ruleId":"129","severity":1,"message":"154","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":16},{"ruleId":"129","severity":1,"message":"140","line":2,"column":26,"nodeType":"131","messageId":"132","endLine":2,"endColumn":40},{"ruleId":"129","severity":1,"message":"155","line":4,"column":23,"nodeType":"131","messageId":"132","endLine":4,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":25},{"ruleId":"129","severity":1,"message":"156","line":8,"column":23,"nodeType":"131","messageId":"132","endLine":8,"endColumn":37},{"ruleId":"129","severity":1,"message":"157","line":2,"column":16,"nodeType":"131","messageId":"132","endLine":2,"endColumn":27},"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'AmountDetailsCard' is defined but never used.","Identifier","unusedVar","'setCartItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCartTotalPrice'. Either include it or remove the dependency array.","ArrayExpression",["158"],"'useState' is defined but never used.","'addProductAtom' is assigned a value but never used.","'useRecoilValue' is defined but never used.","'AddProductItems' is defined but never used.","'ecommerce' is defined but never used.","'data' is defined but never used.","'set' is defined but never used.","'ref' is defined but never used.","'setFilterData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'productDetails'. Either include them or remove the dependency array.",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Button' is defined but never used.","'TotalPrice' is defined but never used.","'setAddressText' is assigned a value but never used.","'useNavigate' is defined but never used.",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [cartItem, setCartTotalPrice]",{"range":"164","text":"165"},"Update the dependencies array to be: [id, productDetails]",{"range":"166","text":"167"},[898,908],"[cartItem, setCartTotalPrice]",[693,695],"[id, productDetails]"]